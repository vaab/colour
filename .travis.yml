language: python
python:
  - "3.6"
  - "3.5"
  - "3.4"
  - "2.7"
install:
  - if [ -e requirements.txt ]; then pip install -r requirements.txt ; fi
  - pip install coverage
  - python setup.py develop easy_install "$(./autogen.sh --get-name)[test]"  ## getting deps
script:
  - nosetests -sx .  ## will collect coverage reports
  ## yes, the following is redundant and weaker than nosetests, but
  ## for now I want to ensure that it works with a simpler
  ## configuration:
  - python -m doctest colour.py
  - python -m doctest README.rst
after_success:
  - "bash <(curl -s https://codecov.io/bash)  #dovis: ignore"
  - if [ "$DOVIS" -a -d "$ARTIFACT_DIR" ]; then cp ".coverage" "$ARTIFACT_DIR"; echo "$PWD" > "$ARTIFACT_DIR/cover_path"; fi

## Ignored by Travis, but used internally to check packaging
dist_check:
  options:
    exclude:
      - ["v:3.6", "pkg:old"]  ## old version is breaking python 3.6 pkg_resources
  tests:
  - label: install
    matrix:
      'yes':
        - label: venv
          matrix:
            'on': |
              pip install virtualenv
              virtualenv /tmp/virtualenv
              . /tmp/virtualenv/bin/activate
            'off': |
              true
        - label: pkg
          matrix:
            old: |
              ## version 10 introduce a bug with d2to1
              pip install setuptools==9.1
              ## some ``python setup.py`` black magic do not work with d2to1 and pip ``6.0.7``
              pip install pip==1.5.6
            docker: |
              ## Using the versions of python docker images
              true
            latest: |
              ## Using the last version of pip and setuptools
              pip install pip --upgrade
              pip install setuptools --upgrade
        - label: method
          matrix:
            setup: python setup.py install
            pip: pip install .
            pip+git: pip install "git+file://$PWD"
            dist:
              dist_files:
                pip install "$DIST_FILE"
        - |
          pip show -f $(./autogen.sh --get-name)
          pip list
      'no':
      - |
        export PYTHONPATH=/tmp/lib
        mkdir /tmp/lib
        ln -sf $PWD/$(./autogen.sh --get-name).py /tmp/lib/
        touch /tmp/not-installed

  - |
    name=$(./autogen.sh --get-name)
    cd /tmp
    python -c "import $name"
  - |
    [ -e /tmp/not-installed ] || {
        cd "$OLDPWD" &&
        pip uninstall -y $(./autogen.sh --get-name) &&
        cd /tmp &&
        ! python -c "import $name"
    }
